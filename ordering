
# Relationship and Ordering 

During infrastructure automation, often we come across use cases where we need to configure a software based  on conditions. It could
be a verifying a dependency of a module or say a particular software is installed or running. 

For Exp:- In the below manifest file, we need to make sure the nginx package is installed before starting the nginx service. Puppet does 
not execute the resources in the order defined in the manifest. Due to this behavior, we need to explicitly define dependencies if our 
infrastructure code has any.

1) 'require' property - It tells puppet to execute Package["nginx"] (Please note the capital letter used while defining the 'require' 
property) and ensure it is present before starting the service.


  package { 'nginx':
    .......
  }

  service { "nginx":
      require => Package["nginx"],
      ..........
  } 


Example:- 

node "ip-172-31-35-58.ap-south-1.compute.internal" {

  package { 'nginx':
    ensure => present,
  }
  service { "nginx":
      require => Package["nginx"],
      ensure => running,
      enable => true,
  } 
}


2) 'before' property - It tells puppet to execute the nginx package before service[]


  package { 'nginx':
    before => Service["nginx"]
    ensure => present,
  }

  service { "nginx":
      ensure => running,
      enable => true,
  }
  
 

Example:--

node "ip-172-31-35-58.ap-south-1.compute.internal" {

  package { 'nginx':
    before => Service["nginx"]
    ensure => present,
  }
  service { "nginx":
      ensure => running,
      enable => true,
  }
}






